/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DestinationMinter,
  DestinationMinterInterface,
} from "../../contracts/DestinationMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintCallSuccessfull",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b50604051610b5d380380610b5d8339818101604052810190610031919061017b565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517fd7f7333400000000000000000000000000000000000000000000000000000000815260040161009991906101c8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e1565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61014a82610121565b9050919050565b61015a81610140565b8114610164575f80fd5b50565b5f8151905061017581610151565b92915050565b5f80604083850312156101915761019061011d565b5b5f61019e85828601610167565b92505060206101af85828601610167565b9150509250929050565b6101c281610140565b82525050565b5f6020820190506101db5f8301846101b9565b92915050565b60805161095d6102005f395f81816101800152610226015261095d5ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806301ffc9a71461004357806385572ffb14610073578063b0f479a11461008f575b5f80fd5b61005d60048036038101906100589190610375565b6100ad565b60405161006a91906103ba565b60405180910390f35b61008d600480360381019061008891906103f5565b61017e565b005b610097610223565b6040516100a4919061047b565b60405180910390f35b5f7f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061017757507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020e57336040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401610205919061047b565b60405180910390fd5b6102208161021b90610893565b61024a565b50565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682606001516040516102949190610911565b5f604051808303815f865af19150503d805f81146102cd576040519150601f19603f3d011682016040523d82523d5f602084013e6102d2565b606091505b50509050806102df575f80fd5b7fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8860405160405180910390a15050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61035481610320565b811461035e575f80fd5b50565b5f8135905061036f8161034b565b92915050565b5f6020828403121561038a57610389610318565b5b5f61039784828501610361565b91505092915050565b5f8115159050919050565b6103b4816103a0565b82525050565b5f6020820190506103cd5f8301846103ab565b92915050565b5f80fd5b5f60a082840312156103ec576103eb6103d3565b5b81905092915050565b5f6020828403121561040a57610409610318565b5b5f82013567ffffffffffffffff8111156104275761042661031c565b5b610433848285016103d7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104658261043c565b9050919050565b6104758161045b565b82525050565b5f60208201905061048e5f83018461046c565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104de82610498565b810181811067ffffffffffffffff821117156104fd576104fc6104a8565b5b80604052505050565b5f61050f61030f565b905061051b82826104d5565b919050565b5f80fd5b5f819050919050565b61053681610524565b8114610540575f80fd5b50565b5f813590506105518161052d565b92915050565b5f67ffffffffffffffff82169050919050565b61057381610557565b811461057d575f80fd5b50565b5f8135905061058e8161056a565b92915050565b5f80fd5b5f80fd5b5f67ffffffffffffffff8211156105b6576105b56104a8565b5b6105bf82610498565b9050602081019050919050565b828183375f83830152505050565b5f6105ec6105e78461059c565b610506565b90508281526020810184848401111561060857610607610598565b5b6106138482856105cc565b509392505050565b5f82601f83011261062f5761062e610594565b5b813561063f8482602086016105da565b91505092915050565b5f67ffffffffffffffff821115610662576106616104a8565b5b602082029050602081019050919050565b5f80fd5b6106808161045b565b811461068a575f80fd5b50565b5f8135905061069b81610677565b92915050565b5f819050919050565b6106b3816106a1565b81146106bd575f80fd5b50565b5f813590506106ce816106aa565b92915050565b5f604082840312156106e9576106e8610494565b5b6106f36040610506565b90505f6107028482850161068d565b5f830152506020610715848285016106c0565b60208301525092915050565b5f61073361072e84610648565b610506565b9050808382526020820190506040840283018581111561075657610755610673565b5b835b8181101561077f578061076b88826106d4565b845260208401935050604081019050610758565b5050509392505050565b5f82601f83011261079d5761079c610594565b5b81356107ad848260208601610721565b91505092915050565b5f60a082840312156107cb576107ca610494565b5b6107d560a0610506565b90505f6107e484828501610543565b5f8301525060206107f784828501610580565b602083015250604082013567ffffffffffffffff81111561081b5761081a610520565b5b6108278482850161061b565b604083015250606082013567ffffffffffffffff81111561084b5761084a610520565b5b6108578482850161061b565b606083015250608082013567ffffffffffffffff81111561087b5761087a610520565b5b61088784828501610789565b60808301525092915050565b5f61089e36836107b6565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b838110156108d65780820151818401526020810190506108bb565b5f8484015250505050565b5f6108eb826108a5565b6108f581856108af565b93506109058185602086016108b9565b80840191505092915050565b5f61091c82846108e1565b91508190509291505056fea26469706673582212204deaed4dda368785d8fd1325ccb2113007b8b572715834214e9169ed86433c9b64736f6c63430008140033";

type DestinationMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationMinter__factory extends ContractFactory {
  constructor(...args: DestinationMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, nftAddress, overrides || {});
  }
  override deploy(
    router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, nftAddress, overrides || {}) as Promise<
      DestinationMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DestinationMinter__factory {
    return super.connect(runner) as DestinationMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationMinterInterface {
    return new Interface(_abi) as DestinationMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DestinationMinter {
    return new Contract(address, _abi, runner) as unknown as DestinationMinter;
  }
}
