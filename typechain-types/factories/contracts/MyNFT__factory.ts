/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50336040518060400160405280600581526020017f4d794e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250815f90816200008e919062000455565b508060019081620000a0919062000455565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010d91906200057c565b60405180910390fd5b62000127816200012e60201b60201c565b5062000597565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026d57607f821691505b60208210810362000283576200028262000228565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002aa565b620002f38683620002aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033d6200033762000331846200030b565b62000314565b6200030b565b9050919050565b5f819050919050565b62000358836200031d565b62000370620003678262000344565b848454620002b6565b825550505050565b5f90565b6200038662000378565b620003938184846200034d565b505050565b5b81811015620003ba57620003ae5f826200037c565b60018101905062000399565b5050565b601f8211156200040957620003d38162000289565b620003de846200029b565b81016020851015620003ee578190505b62000406620003fd856200029b565b83018262000398565b50505b505050565b5f82821c905092915050565b5f6200042b5f19846008026200040e565b1980831691505092915050565b5f6200044583836200041a565b9150826002028217905092915050565b6200046082620001f1565b67ffffffffffffffff8111156200047c576200047b620001fb565b5b62000488825462000255565b62000495828285620003be565b5f60209050601f831160018114620004cb575f8415620004b6578287015190505b620004c2858262000438565b86555062000531565b601f198416620004db8662000289565b5f5b828110156200050457848901518255600182019150602085019450602081019050620004dd565b8683101562000524578489015162000520601f8916826200041a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005648262000539565b9050919050565b620005768162000558565b82525050565b5f602082019050620005915f8301846200056b565b92915050565b61247f80620005a55f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a0578063a22cb4651161006f578063a22cb465146102a1578063b88d4fde146102bd578063c87b56dd146102d9578063e985e9c514610309578063f2fde38b1461033957610109565b806370a082311461022b578063715018a61461025b5780638da5cb5b1461026557806395d89b411461028357610109565b806323b872dd116100dc57806323b872dd146101a757806342842e0e146101c35780636352211e146101df5780636a6278421461020f57610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611a50565b610355565b6040516101349190611a95565b60405180910390f35b6101456103b5565b6040516101529190611b38565b60405180910390f35b61017560048036038101906101709190611b8b565b610444565b6040516101829190611bf5565b60405180910390f35b6101a560048036038101906101a09190611c38565b61045f565b005b6101c160048036038101906101bc9190611c76565b610475565b005b6101dd60048036038101906101d89190611c76565b610574565b005b6101f960048036038101906101f49190611b8b565b610593565b6040516102069190611bf5565b60405180910390f35b61022960048036038101906102249190611cc6565b6105a4565b005b61024560048036038101906102409190611cc6565b6105f0565b6040516102529190611d00565b60405180910390f35b6102636106a6565b005b61026d6106b9565b60405161027a9190611bf5565b60405180910390f35b61028b6106e1565b6040516102989190611b38565b60405180910390f35b6102bb60048036038101906102b69190611d43565b610771565b005b6102d760048036038101906102d29190611ead565b610787565b005b6102f360048036038101906102ee9190611b8b565b6107a4565b6040516103009190611b38565b60405180910390f35b610323600480360381019061031e9190611f2d565b6108af565b6040516103309190611a95565b60405180910390f35b610353600480360381019061034e9190611cc6565b61093d565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ae57506103ad826109c1565b5b9050919050565b60605f80546103c390611f98565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611f98565b801561043a5780601f106104115761010080835404028352916020019161043a565b820191905f5260205f20905b81548152906001019060200180831161041d57829003601f168201915b5050505050905090565b5f61044e82610aa2565b5061045882610b28565b9050919050565b610471828261046c610b61565b610b68565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104e5575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104dc9190611bf5565b60405180910390fd5b5f6104f883836104f3610b61565b610b7a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461056e578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161056593929190611fc8565b60405180910390fd5b50505050565b61058e83838360405180602001604052805f815250610787565b505050565b5f61059d82610aa2565b9050919050565b6105ac610d85565b6105b881600854610e0c565b6105dc6008546040518060800160405280605481526020016123f660549139610e29565b60085f815480929190600101919050555050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610661575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106589190611bf5565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106ae610d85565b6106b75f610e83565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546106f090611f98565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90611f98565b80156107675780601f1061073e57610100808354040283529160200191610767565b820191905f5260205f20905b81548152906001019060200180831161074a57829003601f168201915b5050505050905090565b61078361077c610b61565b8383610f46565b5050565b610792848484610475565b61079e848484846110af565b50505050565b60606107af82610aa2565b505f60065f8481526020019081526020015f2080546107cd90611f98565b80601f01602080910402602001604051908101604052809291908181526020018280546107f990611f98565b80156108445780601f1061081b57610100808354040283529160200191610844565b820191905f5260205f20905b81548152906001019060200180831161082757829003601f168201915b505050505090505f610854611261565b90505f8151036108685781925050506108aa565b5f8251111561089c578082604051602001610884929190612037565b604051602081830303815290604052925050506108aa565b6108a584611277565b925050505b919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610945610d85565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109ac9190611bf5565b60405180910390fd5b6109be81610e83565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a8b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a9b5750610a9a826112dd565b5b9050919050565b5f80610aad83611346565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b169190611d00565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b75838383600161137f565b505050565b5f80610b8584611346565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bc657610bc581848661153e565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c5157610c055f855f8061137f565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610cd057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610d8d610b61565b73ffffffffffffffffffffffffffffffffffffffff16610dab6106b9565b73ffffffffffffffffffffffffffffffffffffffff1614610e0a57610dce610b61565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e019190611bf5565b60405180910390fd5b565b610e25828260405180602001604052805f815250611601565b5050565b8060065f8481526020019081526020015f209081610e4791906121f7565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610e779190611d00565b60405180910390a15050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fb657816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610fad9190611bf5565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110a29190611a95565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561125b578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110f2610b61565b8685856040518563ffffffff1660e01b81526004016111149493929190612318565b6020604051808303815f875af192505050801561114f57506040513d601f19601f8201168201806040525081019061114c9190612376565b60015b6111d0573d805f811461117d576040519150601f19603f3d011682016040523d82523d5f602084013e611182565b606091505b505f8151036111c857836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111bf9190611bf5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461125957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112509190611bf5565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061128282610aa2565b505f61128c611261565b90505f8151116112aa5760405180602001604052805f8152506112d5565b806112b48461161c565b6040516020016112c5929190612037565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113b757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156114e9575f6113c684610aa2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561143057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611443575061144181846108af565b155b1561148557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161147c9190611bf5565b60405180910390fd5b81156114e757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115498383836116e6565b6115fc575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115bd57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115b49190611d00565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115f39291906123a1565b60405180910390fd5b505050565b61160b83836117a6565b6116175f8484846110af565b505050565b60605f600161162a84611899565b0190505f8167ffffffffffffffff81111561164857611647611d89565b5b6040519080825280601f01601f19166020018201604052801561167a5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156116db578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816116d0576116cf6123c8565b5b0494505f8503611687575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561179d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061175e575061175d84846108af565b5b8061179c57508273ffffffffffffffffffffffffffffffffffffffff1661178483610b28565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611816575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161180d9190611bf5565b60405180910390fd5b5f61182283835f610b7a565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611894575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161188b9190611bf5565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106118f5577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816118eb576118ea6123c8565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611932576d04ee2d6d415b85acef81000000008381611928576119276123c8565b5b0492506020810190505b662386f26fc10000831061196157662386f26fc100008381611957576119566123c8565b5b0492506010810190505b6305f5e100831061198a576305f5e10083816119805761197f6123c8565b5b0492506008810190505b61271083106119af5761271083816119a5576119a46123c8565b5b0492506004810190505b606483106119d257606483816119c8576119c76123c8565b5b0492506002810190505b600a83106119e1576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a2f816119fb565b8114611a39575f80fd5b50565b5f81359050611a4a81611a26565b92915050565b5f60208284031215611a6557611a646119f3565b5b5f611a7284828501611a3c565b91505092915050565b5f8115159050919050565b611a8f81611a7b565b82525050565b5f602082019050611aa85f830184611a86565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ae5578082015181840152602081019050611aca565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b0a82611aae565b611b148185611ab8565b9350611b24818560208601611ac8565b611b2d81611af0565b840191505092915050565b5f6020820190508181035f830152611b508184611b00565b905092915050565b5f819050919050565b611b6a81611b58565b8114611b74575f80fd5b50565b5f81359050611b8581611b61565b92915050565b5f60208284031215611ba057611b9f6119f3565b5b5f611bad84828501611b77565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611bdf82611bb6565b9050919050565b611bef81611bd5565b82525050565b5f602082019050611c085f830184611be6565b92915050565b611c1781611bd5565b8114611c21575f80fd5b50565b5f81359050611c3281611c0e565b92915050565b5f8060408385031215611c4e57611c4d6119f3565b5b5f611c5b85828601611c24565b9250506020611c6c85828601611b77565b9150509250929050565b5f805f60608486031215611c8d57611c8c6119f3565b5b5f611c9a86828701611c24565b9350506020611cab86828701611c24565b9250506040611cbc86828701611b77565b9150509250925092565b5f60208284031215611cdb57611cda6119f3565b5b5f611ce884828501611c24565b91505092915050565b611cfa81611b58565b82525050565b5f602082019050611d135f830184611cf1565b92915050565b611d2281611a7b565b8114611d2c575f80fd5b50565b5f81359050611d3d81611d19565b92915050565b5f8060408385031215611d5957611d586119f3565b5b5f611d6685828601611c24565b9250506020611d7785828601611d2f565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dbf82611af0565b810181811067ffffffffffffffff82111715611dde57611ddd611d89565b5b80604052505050565b5f611df06119ea565b9050611dfc8282611db6565b919050565b5f67ffffffffffffffff821115611e1b57611e1a611d89565b5b611e2482611af0565b9050602081019050919050565b828183375f83830152505050565b5f611e51611e4c84611e01565b611de7565b905082815260208101848484011115611e6d57611e6c611d85565b5b611e78848285611e31565b509392505050565b5f82601f830112611e9457611e93611d81565b5b8135611ea4848260208601611e3f565b91505092915050565b5f805f8060808587031215611ec557611ec46119f3565b5b5f611ed287828801611c24565b9450506020611ee387828801611c24565b9350506040611ef487828801611b77565b925050606085013567ffffffffffffffff811115611f1557611f146119f7565b5b611f2187828801611e80565b91505092959194509250565b5f8060408385031215611f4357611f426119f3565b5b5f611f5085828601611c24565b9250506020611f6185828601611c24565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611faf57607f821691505b602082108103611fc257611fc1611f6b565b5b50919050565b5f606082019050611fdb5f830186611be6565b611fe86020830185611cf1565b611ff56040830184611be6565b949350505050565b5f81905092915050565b5f61201182611aae565b61201b8185611ffd565b935061202b818560208601611ac8565b80840191505092915050565b5f6120428285612007565b915061204e8284612007565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120b67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261207b565b6120c0868361207b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6120fb6120f66120f184611b58565b6120d8565b611b58565b9050919050565b5f819050919050565b612114836120e1565b61212861212082612102565b848454612087565b825550505050565b5f90565b61213c612130565b61214781848461210b565b505050565b5b8181101561216a5761215f5f82612134565b60018101905061214d565b5050565b601f8211156121af576121808161205a565b6121898461206c565b81016020851015612198578190505b6121ac6121a48561206c565b83018261214c565b50505b505050565b5f82821c905092915050565b5f6121cf5f19846008026121b4565b1980831691505092915050565b5f6121e783836121c0565b9150826002028217905092915050565b61220082611aae565b67ffffffffffffffff81111561221957612218611d89565b5b6122238254611f98565b61222e82828561216e565b5f60209050601f83116001811461225f575f841561224d578287015190505b61225785826121dc565b8655506122be565b601f19841661226d8661205a565b5f5b828110156122945784890151825560018201915060208501945060208101905061226f565b868310156122b157848901516122ad601f8916826121c0565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6122ea826122c6565b6122f481856122d0565b9350612304818560208601611ac8565b61230d81611af0565b840191505092915050565b5f60808201905061232b5f830187611be6565b6123386020830186611be6565b6123456040830185611cf1565b818103606083015261235781846122e0565b905095945050505050565b5f8151905061237081611a26565b92915050565b5f6020828403121561238b5761238a6119f3565b5b5f61239884828501612362565b91505092915050565b5f6040820190506123b45f830185611be6565b6123c16020830184611cf1565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfe68747470733a2f2f697066732e696f2f697066732f516d544b4e4a797252707a626e42345855794b4b5244787454614c687663357358626364577a357453673973454d2f716e5f636369705f6e66742e6a736f6ea2646970667358221220925e29d14f4045f4c3b208263ebb68fa80fcb976c3b65dbcfbb8608ba852544164736f6c63430008140033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}
